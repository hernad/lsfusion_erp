MODULE LegalEntityDefault;

REQUIRE LegalEntity;

NAMESPACE LegalEntity;

// ----------------------------------- Standard data ----------- ------------------------ //

loadDefaultStaticOwnership 'Add Property Forms' (ISTRING [100] iname, BPSTRING [10] isname, BPSTRING [3] sidCountry, static) {// static class
    name (Ownership t) <- iname WHERE t == static;
    shortName (Ownership t) <- isname WHERE t == static;
    country (Ownership t) <- country (sidCountry) WHERE t == static;
}

loadDefaultOwnership 'Add Ownership Forms' (ISTRING [100] iname, BPSTRING [10] isname, BPSTRING [3] sidCountry) {
    NEW t = Ownership {
        name (t) <- iname;
        shortName (t) <- isname;
        country (t) <- country (sidCountry);
    }
}

overLoadDefaultOwnerships () ABSTRACT LIST ();

loadDefaultOwnerships 'Load standard property forms' () ABSTRACT LIST () IN loadDefault;

@implementLoadDefaultData (loadDefaultOwnerships);

// -

loadDefaultLegalEntityGroup 'Add organization groups' (ISTRING [100] iname, STRING [100] id) {
    NEW lg = LegalEntityGroup {
        name (lg) <- iname;
        id (lg) <- id;

    }
}
loadDefaultRecLegalEntityGroup 'Add organization groups (recursively)' (ISTRING [100] iname, STRING [100] id, STRING [100] idParent) {
    NEW lg = LegalEntityGroup {
        name (lg) <- iname;
        id (lg) <- id;
        parent (lg) <- legalEntityGroup (idParent);
    }
}

loadDefaultLegalEntityGroups 'Load standard organization groups' () ABSTRACT LIST () IN loadDefault;

@implementLoadDefaultData (loadDefaultLegalEntityGroups);

loadDefaultLegalEntityGroups () + {
    loadDefaultLegalEntityGroup ('All', 'all');
    loadDefaultRecLegalEntityGroup ('Suppliers', 'suppliers', 'all');
    loadDefaultRecLegalEntityGroup ('Customers', 'customers', 'all');
    loadDefaultRecLegalEntityGroup ('Companies', 'companies', 'all');
    
    NEW l = LegalEntity {
        name (l) <- 'My organization';
        id (l) <- 'company';
        legalEntityGroup (l) <- legalEntityGroup ('companies');
        
        isSupplier (l) <- TRUE;
        isCompany (l) <- TRUE;
        isCustomer (l) <- TRUE;
    }
}
